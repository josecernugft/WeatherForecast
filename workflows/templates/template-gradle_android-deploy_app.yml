parameters:
  - name: 'vmImage'
    default: 'macos-latest'
    type: string

  - name: 'buildType'
    default: 'debug'
    type: string

jobs:
  - job: Build
    pool:
      vmImage: ${{ parameters.vmImage }}
    steps:
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            yes | ~/Library/Android/sdk/tools/bin/sdkmanager --licenses --sdk_root=$ANDROID_SDK_PATH
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --install 'system-images;android-27;google_apis;x86'
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            $ANDROID_HOME/platform-tools/adb devices
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            $ANDROID_HOME/platform-tools/adb devices
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n test_android_emulator -k 'system-images;android-27;google_apis;x86' --force
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            nohup $ANDROID_HOME/emulator/emulator -avd test_android_emulator -no-snapshot > /dev/null 2>&1 &
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
            echo "Emulator started"
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          publishJUnitResults: true
          javaHomeOption: 'JDKVersion'
          jdkArchitectureOption: 'x64'
          jdkVersion: 1.11
          #testResultsFiles: '**/TEST-*.xml'
          #testResultsFiles: '*/build/test-results/testReleaseUnitTest/TEST-*.xml'
          tasks: 'assembleRelease'
        env:
          API_WEATHER_FORECAST_RELEASE: $(API_WEATHER_FORECAST_RELEASE)
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          publishJUnitResults: true
          testResultsFiles: '**/TEST-*.xml'
          jdkVersion: 1.11
          tasks: 'createDebugCoverageReport'
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            find "." -type f -name "*.html"
            find "." -type f -name "*.xml"
      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: 'JaCoCo'
          summaryFileLocation: '/Users/runner/work/1/s/runner/WeatherForecast/app/build/reports/coverage/androidTest/debug/report.xml'
          reportDirectory: '/Users/runner/work/1/s/runner/WeatherForecast/app/build/reports/coverage/androidTest/debug/'